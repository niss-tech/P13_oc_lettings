name: Pipeline CI-CD

on:
  push:
    branches: 
    - master
    - tests
  pull_request:
    branches: 
    - master

jobs:
  build-and-test:
    name: Vérification du code (tests + linting)
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9, '3.10']

    steps:
    - name: Cloner le dépôt Git
      uses: actions/checkout@v3

    - name: Installation Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Installation des dépendances
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Vérification conformité du code (flake8)
      run: flake8

    - name: Lancer les tests unitaires/intégrations avec couverture
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      run: |
        coverage run -m pytest
        coverage report -m --fail-under=80
        coverage html
  deploy:
    name: Déploiement automatique en production
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Cloner le dépôt Git
      uses: actions/checkout@v3

    - name: Installer Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: 3.9

    - name: Installation des dépendances
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Connexion à Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Construction et envoi de l'image Docker
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/oc-lettings:${{ github.sha }} .
        docker tag ${{ secrets.DOCKER_USERNAME }}/oc-lettings:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/oc-lettings:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/oc-lettings:${{ github.sha }}
        docker push ${{ secrets.DOCKER_USERNAME }}/oc-lettings:latest

    - name:  Déploiement sur Render
      run: |
        curl -X POST -d '' "${{ secrets.RENDER_DEPLOY_HOOK }}"
